version: 2.1

aliases:
  - &yarn_cache_key v1-yarn-{{ checksum "yarn.lock" }}
  - &next_cache_key v1-next-{{ checksum "yarn.lock" }}
  - &ci_executor
    working_directory: ~/worship_mate/
    shell: /bin/bash -eux -o pipefail
  - &docker_node_image circleci/node:12.8.1-stretch

orbs:
  codecov: codecov/codecov@1.0.2

executors:
  docker_node:
    <<: *ci_executor
    docker:
      - image: *docker_node_image

  docker_node_postgres:
    <<: *ci_executor
    parameters:
      db_name:
        type: string
        default: worship_mate
    docker:
      - image: *docker_node_image
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_DB: << parameters.db_name >>
    environment:
      PGUSER: postgres
      PGDATABASE: << parameters.db_name >>

commands:
  install_yarn_and_deps:
    steps:
      - restore_cache:
          key: *yarn_cache_key
      - run:
          name: Install external dependencies
          command: yarn install --immutable
      - save_cache:
          key: *yarn_cache_key
          paths:
            - node_modules
            - client/node_modules
            - server/node_modules
            - pg-toolbox/node_modules

jobs:
  build_pg_toolbox:
    executor: docker_node

    steps:
      - checkout
      - install_yarn_and_deps
      - run: yarn pg-toolbox build

  test_pg_toolbox:
    executor:
      name: docker_node_postgres
      db_name: pg_toolbox_test

    steps:
      - checkout
      - install_yarn_and_deps

      - run: yarn pg-toolbox typecheck

      - run: yarn pg-toolbox test --coverage
      - codecov/upload:
          file: pg-toolbox/coverage/lcov.info

      - run: yarn pg-toolbox test:e2e --coverage
      - codecov/upload:
          file: pg-toolbox/coverage/lcov.info

  build_server:
    executor: docker_node
    steps:
      - checkout
      - install_yarn_and_deps
      - run: yarn pg-toolbox build
      - run: yarn server build

  test_server:
    executor: docker_node_postgres
    steps:
      - checkout
      - install_yarn_and_deps
      - run: yarn pg-toolbox build

      - run: yarn server typecheck

      - run: yarn server test --coverage
      - codecov/upload:
          file: server/coverage/lcov.info

      - run: yarn server test:e2e --coverage
      - codecov/upload:
          file: server/coverage/lcov.info

  build_client:
    executor: docker_node_postgres
    steps:
      - checkout
      - install_yarn_and_deps

      # need server to prepopulate
      - run: yarn pg-toolbox build
      - run: yarn server migrate up
      - run:
          command: yarn server start
          background: true
      - run:
          name: Wait for server to start
          command: curl --retry 5 --retry-connrefused 127.0.0.1:4000

      # builds client for testing in CI -- production will
      # build its own Next.js app
      - restore_cache:
          key: *next_cache_key
      - run: yarn client build
      - save_cache:
          key: *next_cache_key
          paths:
            - client/.next/cache

  test_client:
    executor: docker_node
    steps:
      - checkout
      - install_yarn_and_deps

      - run: yarn client typecheck

      - run: yarn client test --coverage
      - codecov/upload:
          file: client/coverage/lcov.info

  lint_all:
    executor: docker_node
    steps:
      - checkout
      - install_yarn_and_deps
      - run: yarn lint .
      - run:
          name: Check that server GraphQL files are up to date
          command: |
            yarn server codegen
            git diff --exit-code server/
      - run:
          name: Check that client GraphQL files are up to date
          command: |
            yarn client codegen
            git diff --exit-code client/

workflows:
  version: 2

  build_and_test:
    jobs:
      - build_pg_toolbox
      - test_pg_toolbox
      - build_server
      - test_server
      - build_client
      - test_client
      - lint_all
